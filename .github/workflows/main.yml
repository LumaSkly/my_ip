name: Update IP List

on:
  schedule:
    - cron: '*/15 * * * *'
  workflow_dispatch:
  push:

jobs:
  update-ip-list:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install requests beautifulsoup4
        
    - name: Debug Environment
      run: |
        echo "Python version: $(python --version)"
        echo "Current directory: $(pwd)"
        echo "Repository: ${{ github.repository }}"
        echo "Branch: $(git branch --show-current)"
        echo "PAT exists: ${{ secrets.PAT != '' }}"
        
    - name: Run script
      run: |
        python ${{ github.workspace }}/collect_ips.py
        if [ $? -ne 0 ]; then
          echo "Python script failed"
          exit 1
        fi
        
    - name: Verify IP file
      run: |
        if [ -s my_ip.txt ]; then
          echo "IP file exists and has content:"
          wc -l my_ip.txt
          head -n 5 my_ip.txt
        else
          echo "IP file is empty or missing"
          exit 1
        fi
        
    - name: Set Git identity
      run: |
        git config user.name 'github-actions[bot]'
        git config user.email 'github-actions[bot]@users.noreply.github.com'
        
    - name: Commit and push changes
      run: |
        if [ -n "$(git status --porcelain)" ]; then
          echo "Changes detected, proceeding with git operations..."
          git add my_ip.txt
          git commit -m "Automatic IP list update $(date +%Y-%m-%d)"
          # 添加重试机制
          MAX_RETRIES=3
          RETRY_COUNT=0
          while [ $RETRY_COUNT -lt $MAX_RETRIES ]; do
            if git push "https://x-access-token:${{ secrets.PAT }}@github.com/${{ github.repository }}.git" main; then
              echo "Successfully pushed changes"
              break
            fi
            RETRY_COUNT=$((RETRY_COUNT+1))
            echo "Push failed, attempt $RETRY_COUNT of $MAX_RETRIES"
            sleep 5
          done
          if [ $RETRY_COUNT -eq $MAX_RETRIES ]; then
            echo "Failed to push after $MAX_RETRIES attempts"
            exit 1
          fi
        else
          echo "No changes detected, skipping commit."
        fi